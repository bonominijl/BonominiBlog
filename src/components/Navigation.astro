---
// Navigation component for the site with TrendSpotter theme styling
import { Image } from 'astro:assets';

const pathname = new URL(Astro.request.url).pathname;
// Handle trailing slash and BASE_URL prefixes for proper route matching
const basePath = import.meta.env.BASE_URL || '/';
let currentPath = pathname.endsWith('/') ? pathname : `${pathname}/`;
if (basePath !== '/') {
  currentPath = currentPath.replace(new RegExp(`^${basePath}`), '/') || '/';
}

// Import theme script - client:load directive will be added in layout
const themeScriptPath = `${basePath}scripts/theme.js`;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/gallery/', label: 'Gallery' },
  { href: '/models/', label: 'Models' },
  { href: '/contact/', label: 'Contact' },
];
---

<nav class="bg-white dark:bg-base-900 border-b border-base-200 dark:border-base-800 sticky top-0 z-50 transition-colors duration-200">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a 
          href={`${basePath}`} 
          class="group flex items-center gap-2 text-xl font-bold text-base-900 dark:text-white hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
        >
          <span class="size-8 bg-accent-500 text-white flex items-center justify-center font-bold rounded-sm transform group-hover:scale-105 transition-transform">
            BB
          </span>
          <span>BonominiBlog</span>
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-2">
          {navItems.map(item => {
            const isActive = currentPath === item.href || 
                           (item.href !== '/' && currentPath.startsWith(item.href));
            return (
              <a 
                href={`${basePath}${item.href.replace(/^\//, '')}`}
                class={`px-4 py-2 text-sm font-medium rounded-full transition-colors ${
                  isActive 
                    ? 'bg-accent-50 text-accent-600 dark:bg-accent-900 dark:text-accent-400' 
                    : 'text-base-600 dark:text-base-300 hover:text-accent-600 dark:hover:text-accent-400 hover:bg-base-50 dark:hover:bg-base-800'
                }`}
              >
                {item.label}
              </a>
            )
          })}
        </div>
      </div>
      
      <!-- Theme Toggle -->
      <div class="hidden md:flex items-center ml-4">
        <button 
          id="theme-toggle"
          type="button" 
          class="p-2 text-base-500 dark:text-base-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors focus:outline-none"
          aria-label="Toggle theme"
        >
          <!-- Light theme icon (sun) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-light-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          
          <!-- Dark theme icon (moon) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-dark-icon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
          
          <!-- System theme icon (computer) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-system-icon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </button>
      </div>
      
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="text-base-600 dark:text-base-300 hover:text-accent-600 dark:hover:text-accent-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-500 dark:focus:ring-accent-400 p-2 rounded-md"
          id="mobile-menu-button"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="h-6 w-6 mobile-menu-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <svg class="h-6 w-6 mobile-menu-close hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Mobile Navigation -->
  <div 
    class="md:hidden mobile-menu hidden bg-white dark:bg-base-900 border-t border-base-100 dark:border-base-800 shadow-lg"
  >
    <div class="px-4 py-4 space-y-3 sm:px-6">
      {navItems.map(item => {
        const isActive = currentPath === item.href || 
                         (item.href !== '/' && currentPath.startsWith(item.href));
        return (
          <a 
            href={`${basePath}${item.href.replace(/^\//, '')}`}
            class={`block px-4 py-2 text-base font-medium rounded-md transition-colors ${
              isActive 
                ? 'bg-accent-50 text-accent-600 dark:bg-accent-900 dark:text-accent-400' 
                : 'text-base-600 dark:text-base-300 hover:text-accent-600 dark:hover:text-accent-400 hover:bg-base-50 dark:hover:bg-base-800'
            }`}
          >
            {item.label}
          </a>
        )
      })}
      
      <div class="pt-2 border-t border-base-100 dark:border-base-800 mt-4">
        <div class="flex items-center px-4 py-2">
          <button 
            id="mobile-theme-toggle"
            type="button" 
            class="p-2 text-base-500 dark:text-base-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors focus:outline-none mr-3"
            aria-label="Toggle theme"
          >
            <!-- Light theme icon (sun) -->
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-light-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
            
            <!-- Dark theme icon (moon) -->
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-dark-icon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
            </svg>
            
            <!-- System theme icon (computer) -->
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-system-icon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
          </button>
          <span class="text-base-500 dark:text-base-400 text-sm">Theme</span>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const menuIcon = document.querySelector('.mobile-menu-icon');
    const closeIcon = document.querySelector('.mobile-menu-close');
    
    if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
        menuIcon.classList.toggle('hidden');
        closeIcon.classList.toggle('hidden');
      });
    }
    
    // Theme script is loaded in Layout component for SSR compatibility
  });
</script>
